给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0 开头。



class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        pre1=None
        cur1=l1
        while cur1:
            temp1=cur1.next
            cur1.next=pre1
            pre1=cur1
            cur1=temp1

        pre2=None
        cur2=l2
        while cur2:
            temp2=cur2.next
            cur2.next=pre2
            pre2=cur2
            cur2=temp2

        s1=''
        s2=''
        while pre1 !=None:
            s1+=str(pre1.val)
            pre1=pre1.next  
        while pre2 !=None:
            s2+=str(pre2.val)
            pre2=pre2.next
        sum_num=str(int(s1)+int(s2))
        n=len(sum_num)
        result=ListNode(int(sum_num[0]))
        for i in range(1,n):
            result=ListNode(int(sum_num[i]),result)
        return result
